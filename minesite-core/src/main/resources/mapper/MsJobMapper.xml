<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sixlab.mine.site.core.mapper.MsJobMapper">
  <resultMap id="BaseResultMap" type="cn.sixlab.mine.site.core.models.MsJob">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_clz" jdbcType="VARCHAR" property="jobClz" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="last_status" jdbcType="INTEGER" property="lastStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_clz, job_name, status, last_time, last_status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ms_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.sixlab.mine.site.core.models.MsJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ms_job (job_clz, job_name, status, 
      last_time, last_status, create_time
      )
    values (#{jobClz,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{lastStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sixlab.mine.site.core.models.MsJob">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ms_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobClz != null">
        job_clz,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="lastStatus != null">
        last_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobClz != null">
        #{jobClz,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastStatus != null">
        #{lastStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sixlab.mine.site.core.models.MsJob">
    update ms_job
    <set>
      <if test="jobClz != null">
        job_clz = #{jobClz,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastStatus != null">
        last_status = #{lastStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sixlab.mine.site.core.models.MsJob">
    update ms_job
    set job_clz = #{jobClz,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_status = #{lastStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>